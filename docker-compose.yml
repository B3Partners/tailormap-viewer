networks:
  reverse-proxy:
    external: true
    name: ${PROXY_NETWORK:-traefik}

volumes:
  config-db:

services:
  tailormap:
    image: ghcr.io/b3partners/tailormap-viewer:${VERSION:-snapshot}
    # See README.md for how to build multi-arch images
    build:
      context: .
      args:
        BUILDPLATFORM: ${BUILDPLATFORM:-linux/amd64}
        VERSION: ${VERSION:-snapshot}
        BASE_HREF: ${BASE_HREF:-/}
    networks:
      - default
      - reverse-proxy
    expose:
      - 8080
      - 8081 # for monitoring
    environment:
      - "HOST=${HOST:-localhost}"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://db/tailormap"
      - "DB_PASSWORD=${TAILORMAP_DB_PASSWORD:-tailormap}"
    labels:
      traefik.http.routers.${COMPOSE_PROJECT_NAME:-tailormap}.rule: "Host(`${HOST:-localhost}`)"
      traefik.http.routers.${COMPOSE_PROJECT_NAME:-tailormap}.tls: "true"
      traefik.http.routers.${COMPOSE_PROJECT_NAME:-tailormap}.tls.certresolver: "letsencrypt"
      traefik.http.services.${COMPOSE_PROJECT_NAME:-tailormap}.loadbalancer.server.port: 80
      traefik.enable: true
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:15.1-alpine3.17
    environment:
      POSTGRES_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}
      POSTGRES_USER: tailormap
      POSTGRES_DB: tailormap
      PGUSER: postgres # for pg_isready
    volumes:
      - config-db:/var/lib/postgresql/data
    healthcheck:
      interval: 1m
      timeout: 5s
      retries: 5
      test: pg_isready
    restart: unless-stopped
