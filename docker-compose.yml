version: '3.9'

# See README.md for usage details

services:
  web:
    image: ghcr.io/b3partners/tailormap-viewer:${VERSION_TAG:-snapshot}
    build:
      context: .
      args:
        - "BASE_HREF=${BASE_HREF:-/}"
    profiles:
      - http
    ports:
      - "80:80"
    environment:
      - "API_PROXY_ENABLED=${API_PROXY_ENABLED:-true}"
      - "API_PROXY_URL=${API_PROXY_URL:-http://api:8080/api/}"
      - "API_PROXY_HOST=${API_PROXY_HOST:-localhost}"
      - "ADMIN_PROXY_ENABLED=${ADMIN_PROXY_ENABLED:-true}"
      - "ADMIN_PROXY_URL=${ADMIN_PROXY_URL:-http://admin:8080/admin/}"
      - "ADMIN_PROXY_HOST=${ADMIN_PROXY_HOST:-localhost}"

  # The same as web, but without port 80 exposed and with labels for using with Traefik as a reverse proxy.
  web-proxied:
    image: ghcr.io/b3partners/tailormap-viewer:${VERSION_TAG:-snapshot}
    build:
      context: .
      args:
        - BASE_HREF=${BASE_HREF:-/}
    profiles:
      - proxied
    environment:
      - "API_PROXY_ENABLED=${API_PROXY_ENABLED:-true}"
      - "API_PROXY_URL=${API_PROXY_URL:-http://api:8080/api/}"
      - "API_PROXY_HOST=${API_PROXY_HOST:-localhost}"
      - "ADMIN_PROXY_ENABLED=${ADMIN_PROXY_ENABLED:-true}"
      - "ADMIN_PROXY_URL=${ADMIN_PROXY_URL:-http://admin:8080/admin/}"
      - "ADMIN_PROXY_HOST=${ADMIN_PROXY_HOST:-localhost}"
    labels:
      traefik.http.routers.tailormap-snapshot.rule: "Host(`${HOSTNAME:-snapshot.tailormap.nl}`)"
      traefik.http.routers.tailormap-snapshot.tls: "true"
      traefik.http.routers.tailormap-snapshot.tls.certresolver: "letsencrypt"
      traefik.http.services.tailormap-snapshot.loadbalancer.server.port: 80

  api:
    image: ghcr.io/b3partners/tailormap-api:snapshot
    profiles:
      - full
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/tailormap
      DB_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}

  admin:
    image: ghcr.io/b3partners/tailormap-admin:snapshot
    profiles:
      - full
    environment:
      CATALINA_OPTS: -DPG_HOST=db -DPG_PORT=5432 -DPG_DATABASE=tailormap -DDB_NAME=tailormap -DDB_USER=tailormap -DDB_PASSWORD=${TAILORMAP_DB_PASSWORD:-tailormap} -DURL_SCHEME=http

  db:
    image: ghcr.io/b3partners/tailormap-config-db:snapshot
    build:
      context: docker/db
    profiles:
      - full
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      TAILORMAP_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}
      TM_VERSION: ${TM_VERSION:-5.9.13}
      # use
      #   docker run --rm tomcat:9.0-jre11-temurin /usr/local/tomcat/bin/digest.sh -a PBKDF2WithHmacSHA512 -i 100000 -k 256 -s 16 -h org.apache.catalina.realm.SecretKeyCredentialHandler <PASSWORD>
      # to create this password hash for the admin user
      TAILORMAP_ADMIN_HASHED_PASSWORD: '${TAILORMAP_ADMIN_HASHED_PASSWORD:-720230f982b72beaeaa9aed0cb9bef22$100000$51a21a475cbf417e858ce64645f6b6bebcdfadc303c6ee477bdeb2eb352e29bb}'
    volumes:
      - config-db:/var/lib/postgresql/data
    healthcheck:
      interval: 1m
      timeout: 5s
      retries: 5
      test: su postgres -c pg_isready

volumes:
  config-db:
