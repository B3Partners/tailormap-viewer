version: '3.9'

# See README.md for usage details

networks:
  tailormap-viewer:
    name: tailormap-viewer


services:
  web:
    image: ghcr.io/b3partners/tailormap-viewer:${VERSION_TAG:-snapshot}
    build:
      context: .
      args:
        - "BASE_HREF=${BASE_HREF:-/}"
    profiles:
      - http
    ports:
      - "80:80"
    networks:
      - tailormap-viewer
    environment:
      - "API_PROXY_ENABLED=${API_PROXY_ENABLED:-true}"
      - "API_PROXY_URL=${API_PROXY_URL:-http://api:8080/api/}"
      - "API_PROXY_HOST=${API_PROXY_HOST:-localhost}"
      - "ADMIN_PROXY_ENABLED=${ADMIN_PROXY_ENABLED:-true}"
      - "ADMIN_PROXY_URL=${ADMIN_PROXY_URL:-http://admin:8080/admin/}"
      - "ADMIN_PROXY_HOST=${ADMIN_PROXY_HOST:-localhost}"
    labels:
      traefik.enable: false
    restart: unless-stopped


  # The same as web, but without port 80 exposed and with labels for using with Traefik as a reverse proxy.
  web-proxied:
    image: ghcr.io/b3partners/tailormap-viewer:${VERSION_TAG:-snapshot}
    build:
      context: .
      args:
        - BASE_HREF=${BASE_HREF:-/}
    profiles:
      - proxied
    networks:
      - tailormap-viewer
    expose:
      - "8080"
    environment:
      - "API_PROXY_ENABLED=${API_PROXY_ENABLED:-true}"
      - "API_PROXY_URL=${API_PROXY_URL:-http://api:8080/api/}"
      - "ADMIN_PROXY_ENABLED=${ADMIN_PROXY_ENABLED:-true}"
      - "ADMIN_PROXY_URL=${ADMIN_PROXY_URL:-http://admin:8080/admin/}"
      - "HOST=${HOST:-localhost}"
    labels:
      traefik.http.routers.tailormap-snapshot.rule: "Host(`${HOST:-localhost}`)"
      traefik.http.routers.tailormap-snapshot.tls: "true"
      traefik.http.routers.tailormap-snapshot.tls.certresolver: "letsencrypt"
      traefik.http.services.tailormap-snapshot.loadbalancer.server.port: 80
      traefik.enable: true
    restart: unless-stopped


  web-status:
    profiles:
      - proxied
    depends_on:
      - web-proxied
    expose:
      - "9113"
    image: nginx/nginx-prometheus-exporter:0.11.0
    # see https://github.com/nginxinc/nginx-prometheus-exporter#command-line-arguments
    environment:
      SCRAPE_URI: http://web-proxied:8080/stub_status
      NGINX_RETRIES: 5
      TELEMETRY_PATH: /metrics
      # defaults
      # LISTEN_ADDRESS: ":9113"
    networks:
      - tailormap-viewer
    labels:
      traefik.enable: false


  api:
    image: ghcr.io/b3partners/tailormap-api:snapshot
    profiles:
      - full
    networks:
      - tailormap-viewer
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/tailormap
      DB_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}
    labels:
      traefik.enable: false
    restart: unless-stopped


  admin:
    image: ghcr.io/b3partners/tailormap-admin:snapshot
    profiles:
      - full
    networks:
      - tailormap-viewer
    environment:
      CATALINA_OPTS: -DPG_HOST=db -DPG_PORT=5432 -DPG_DATABASE=tailormap -DDB_NAME=tailormap -DDB_USER=tailormap -DDB_PASSWORD=${TAILORMAP_DB_PASSWORD:-tailormap} -DURL_SCHEME=http
    labels:
      traefik.enable: false
    restart: unless-stopped


  db:
    image: ghcr.io/b3partners/tailormap-config-db:snapshot
    build:
      context: docker/db
    profiles:
      - full
    networks:
      - tailormap-viewer
    labels:
      traefik.enable: false
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      TAILORMAP_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}
    volumes:
      - config-db:/var/lib/postgresql/data
    healthcheck:
      interval: 1m
      timeout: 5s
      retries: 5
      test: su postgres -c pg_isready
    restart: unless-stopped


volumes:
  config-db:
