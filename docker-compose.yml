name: tailormap

volumes:
  db:

services:
  tailormap:
    container_name: ${COMPOSE_PROJECT_NAME}-server
    image: ghcr.io/b3partners/tailormap:${VERSION:-snapshot}
    networks:
      - default
    expose:
      - 8080
    environment:
      - "HOST=${HOST:-localhost}"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://db/tailormap"
      - "SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-default}"
      # The container binds to localhost for running the tailormap container by itself in host network mode
      # Change to 0.0.0.0, so it is reachable by a reverse proxy such as Traefik
      - "SERVER_ADDRESS=0.0.0.0"
      # It's possible to configure a OIDC single-sign on configuration from the environment in addition to
      # configuring SSO configurations via the admin interface. If you deploy multiple instances with the
      # same OIDC configuration you can use the same environment file, so you don't have to configure it
      # manually multiple times.
      - "OIDC_NAME=${OIDC_NAME:-}"
      - "OIDC_ISSUER_URI=${OIDC_ISSUER_URI:-}"
      - "OIDC_CLIENT_ID=${OIDC_CLIENT_ID:-}"
      - "OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET:-}"
      - "OIDC_CLIENT_USER_NAME_ATTRIBUTE=${OIDC_CLIENT_USER_NAME_ATTRIBUTE:name}"
      - "OIDC_SHOW_FOR_VIEWER=${OIDC_SHOW_FOR_VIEWER:false}"
    restart: unless-stopped
    depends_on:
      - db

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    image: postgres:15.3-alpine3.18
    environment:
      POSTGRES_PASSWORD: ${TAILORMAP_DB_PASSWORD:-tailormap}
      POSTGRES_USER: tailormap
      POSTGRES_DB: tailormap
      PGUSER: postgres # for pg_isready
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: 'pg_isready -U tailormap'
    restart: unless-stopped
